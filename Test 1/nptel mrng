TEST 1:
solution:4


Test 2:
solution:[(5,2),(4,3),(2,5),(4,7)]


Test 3:
solution: 
/*def max4(w,x,y,z):
  if w >= x and w >= y and w >= z:
    maximum = w*/
elif x>=w and x>=y and w>=z:
    maximum=x
elif y>=w and y>=x and y>=z:
    maximum=y
elif z>=x and z>=y and z>=w:
    maximum=z
return(maximum)

Test 4:
solution:
/*def nondecreasing(l):
  if l==[] or len(l) == 1:
    return(True)
  else:
    return(*/
sorted(l)==l


Test 5:
solution:
def sumofsquares(n):
  i=1
  while i*i<=n:
    j=1
    while(j*j<=n):
      if(i*i+j*j==n):
        return True
      j=j+1
    i=i+1
  return False


Test 6:
Solution:
def subsequence(l,k):
  for i in l:
    if i in k:
      k.remove(i)
    else:
      return False
  return True



Test 7:
solution:
k,m=[],[]
while(True):
  a=input()
  if len(a)>0:
    k.append(a)
  else:
    break
for i in range(1,len(k)):
  if k[i].find(k[0])>=0:
    m.append(k[i])
for i in m:
  print(i)

  
  
  Test 8:
Solution:
d={}
def maxaggregate(l):
  for i in l:
    d[i[0]]=0
  for i in l:
    d[i[0]]+=i[1]
  ma=max(d.values())
  l=[i for i in d.keys() if d[i]==ma]
  return sorted(l)
